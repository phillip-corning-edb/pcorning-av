#!/bin/bash

# Pass any command line parameter to prevent a full rebuild (only for subsequent runs)
NO_RESET=$1

# Use the current user's GIT SSH key (must exist!)
eval `ssh-agent`
ssh-add ~/.ssh/id_ed25519

# Ensure tpaexec does not destroy the cluster
export NO_DEPROVISION=1

# Custom configuration values (overrides hooks/post-deploy.yml defaults)
TMP_JSON_FILE="tmp_extra_vars.json"
JSON_CONFIG=$(cat <<EOF
{
    "run_extra_vars" : {
        "_COMMENT_": "GENERATED BY RUN SCRIPT",
        "user_info": {
            "_COMMENT_": "Global GIT user configuration values",
            "name": "Phillip Corning",
            "email": "phillip.corning@enterprisedb.com",
        },
        "dev_branches": {
            "_COMMENT_": "Development branch(es) to check out",
            "postgres": "",
            "pglogical": "",
            "bdr": "dev/BDR-896",
        },
        "dev_config": {
            "_COMMENT_": "MISC configuration values",
            "make_num_threads": 8,
            "run_pg_installcheck": 1,
        }
    }
}
EOF
)
echo "${JSON_CONFIG}" > "${TMP_JSON_FILE}"

if [ -z "$NO_RESET" ]; then
    # Start over
    echo "START OVER"
    docker rm -f node1
    docker rm -f node2

    tpaexec provision .
    if [ $? -ne 0 ]; then
        exit
    fi

    tpaexec deploy . --extra-vars "@${TMP_JSON_FILE}"
else
    # Just rebuild existing source
    echo "REBUILD EXISTING SOURCE"

    tpaexec deploy . --tags post-deploy --extra-vars "@${TMP_JSON_FILE}"
fi

echo ""
echo "Attach to nodes with vscode or: ssh -F ssh_config code1"
echo ""

exit
